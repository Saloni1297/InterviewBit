/*
Given a matrix, A of size M x N of 0s and 1s. If an element is 0, set its entire row and column to 0.

Note: This will be evaluated on the extra memory used. Try to minimize the space and time complexity.



Input Format:

The first and the only argument of input contains a 2-d integer matrix, A, of size M x N.
Output Format:

Return a 2-d matrix that satisfies the given conditions.
Constraints:

1 <= N, M <= 1000
0 <= A[i][j] <= 1
Examples:

Input 1:
    [   [1, 0, 1],
        [1, 1, 1], 
        [1, 1, 1]   ]

Output 1:
    [   [0, 0, 0],
        [1, 0, 1],
        [1, 0, 1]   ]

Input 2:
    [   [1, 0, 1],
        [1, 1, 1],
        [1, 0, 1]   ]

Output 2:
    [   [0, 0, 0],
        [1, 0, 1],
        [0, 0, 0]   ]
Seen this q
*/



void Solution::setZeroes(vector<vector<int> > &A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    
    int row=0,col=0;
    
    int n = A.size(),m= A[0].size();
    
    for(int i=0;i<n;i++)
    {
        if(A[i][0] == 0)
        {
            row = 1;
        }
        
    }
    
    for(int i=0;i<m;i++)
    {
        if(A[0][i] == 0)
        {
            col = 1;
        }
    }
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(A[i][j] == 0)
            {
                A[0][j] = 0;
                A[i][0] = 0;
            }
        }
    }
    
    for(int i=1;i<n;i++)
    {
        for(int j=1;j<m;j++)
        {
            if( A[0][j] ==0 || A[i][0] == 0)
            {
                A[i][j] = 0;
            }
        }
    }
    
    if(row == 1)
    {
        for(int i=0;i<n;i++)
        {
            A[i][0] = 0;
        }
    }
    
    if(col == 1)
    {
        for(int i=0;i<m;i++)
        {
         }
    }
    
    if(col == 1)
    {
        for(int i=0;i<m;i++)
        {
            A[0][i] = 0;
        }
    }
    
  }
  
  
  
  ###################################### Apprach used here ####################################################################
  
  
  1. In this code we uses the first row and column as a marker which will store status of row and col.
  2. First find if any zero is present in the first row or first column.
  3. After that iterate over the whole matrix from second row and column to find whether there is zero or not.
  4. If you find zero do A[0][i] = 0 and A[i][0] = 0
  5. Again iterate over the whole matrix from second row and column if you find (A[i][0] == 0 || A[0][i]==0) do A[i][j] = 0
  6. Again check if first row or col contain zero make it zero.
