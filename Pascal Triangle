/*
Given numRows, generate the first numRows of Pascal’s triangle.

Pascal’s triangle : To generate A[C] in row R, sum up A’[C] and A’[C-1] from previous row R - 1.

Example:

Given numRows = 5,

Return

[
     [1],
     [1,1],
     [1,2,1],
     [1,3,3,1],
     [1,4,6,4,1]
]
*/





int nCr(int n, int k)  
{  
    // Base Cases  
    if (k == 0 || k == n)  
        return 1;  
  
    // Recur  
    return nCr(n - 1, k - 1) + nCr(n - 1, k);  
}  



vector<vector<int> > Solution::solve(int A) {
    
    vector<vector<int> > temp;
    int dup = A,c=0;
    while(dup--)
    {
        vector<int> t;
        for(int i=0;i<=c;i++)
        {
            int res = nCr(c,i);
            t.push_back(res);
        }
        temp.push_back(t);
        c++;
    }
    
    return temp;
}
