/*
Given an integer A, generate a square matrix filled with elements from 1 to A2 in spiral order.



Input Format:

The first and the only argument contains an integer, A.
Output Format:

Return a 2-d matrix of size A x A satisfying the spiral order.
Constraints:

1 <= A <= 1000
Examples:

Input 1:
    A = 3

Output 1:
    [   [ 1, 2, 3 ],
        [ 8, 9, 4 ],
        [ 7, 6, 5 ]   ]

Input 2:
    4

Output 2:
    [   [1, 2, 3, 4],
        [12, 13, 14, 5],
        [11, 16, 15, 6],
        [10, 9, 8, 7]   ]
Seen this question in a real interview before
*/



vector<vector<int> > Solution::generateMatrix(int A) {
    
    vector<vector<int> > B(A,vector(A,0));
    
    int s_row=0 ,end_row = A, s_col=0,end_col=A;
    int count = 1;
    while(s_row<end_row && s_col<end_col){
        
        for(int i=s_col;i<end_col;i++)
        {
            B[s_row][i] = count;
            count++;
            
        }
        s_row++;
        
        for(int i=s_row ;i<end_row;i++)
        {
            B[i][end_col-1] = count;
            count++;
        }
        end_col--;
        
        if(s_row<end_row)
        {
            for(int i=end_col-1;i>=s_col;i--)
            {
                B[end_row-1][i] = count;
                count++;
            }
            end_row--;
        }
        
        if(s_col < end_col)
        {
            for(int i=end_row-1;i>=s_row;i--)
            {
                B[i][s_col] = count;
                count++;
            }
            s_col++;
        }
    }
    
    return B;
    
}
